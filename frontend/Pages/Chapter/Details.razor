@attribute [Authorize]
@inject APIAcess APIAcess
@inject NavigationManager NavigationManager

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationState { get; set; }

    private IPermission? PermissoesInternas;

    protected override async Task OnInitializedAsync()
    {
        ArgumentNullException.ThrowIfNull(AuthenticationState);
        PermissoesInternas = new AdministrationPermission((await AuthenticationState).User);
    }
}

<AuthorizeView Roles="@PermissoesInternas?.ReadPermission">
    <Authorized>
        <div>
            <hr />
            <dl class="row">
                <dt class="col-sm-2">
                    Title
                </dt>
                <dd class="col-sm-10">
                    @Entidade.Title
                    &nbsp;
                </dd>
                <dt class="col-sm-2">
                    Title in portuguese
                </dt>
                <dd class="col-sm-10">
                    @Entidade.Titulo
                    &nbsp;
                </dd>

                <dt class="col-sm-2">
                    Start of the story?
                </dt>
                <dd class="col-sm-10">
                    @if (Entidade.IsStart.HasValue)
                    {
                        <span>Yes</span>
                    }
                    else
                    {
                        <span>No</span>
                    }
                    &nbsp;
                </dd>

                <dt class="col-sm-2">
                    End of the story?
                </dt>
                <dd class="col-sm-10">
                    @if (Entidade.IsEnd.HasValue)
                    {
                        <span>Yes</span>
                    }
                    else
                    {
                        <span>No</span>
                    }
                    &nbsp;
                </dd>
                
                <dt class="col-sm-2">
                    Path 01
                </dt>
                <dd class="col-sm-10">
                    @if (@Entidade.Choice01 != null)
                        @Entidade.Choice01

                    &nbsp;
                </dd>

                <dt class="col-sm-2">
                    Path 02
                </dt>
                <dd class="col-sm-10">
                    @if (@Entidade.Choice02 != null)
                        @Entidade.Choice02


                    &nbsp;
                </dd>

                <dt class="col-sm-2">
                    Path 03
                </dt>
                <dd class="col-sm-10">
                    @if (@Entidade.Choice03 != null)
                        @Entidade.Choice03

                    &nbsp;
                </dd>

                <dt class="col-sm-2">
                    Path 04
                </dt>
                <dd class="col-sm-10">
                    @if (@Entidade.Choice04 != null)
                        @Entidade.Choice04

                    &nbsp;
                </dd>

                <dt class="col-sm-2">
                    Content
                </dt>
                <dd class="col-sm-10">
                    @(new MarkupString(@Entidade.Content))
                    
                    &nbsp;
                </dd>

                <dt class="col-sm-2">
                    Content in Portuguese
                </dt>
                <dd class="col-sm-10">
                    @(new MarkupString(@Entidade.Conteudo))
                    &nbsp;
                </dd>

                <dt class="col-sm-2">
                    Image
                </dt>
                <dd class="col-sm-10">
                    @if (Entidade.Badge != null)
                    {
                        <img src=@System.Text.Encoding.Default.GetString(Entidade.Badge) />
                    }
                </dd>


            </dl>
            <hr />
            <dl class="row">
                <dt class="col-sm-2">
                    User who modified
                </dt>
                <dd class="col-sm-10">
                    @Entidade.RecordUser
                    &nbsp;
                </dd>
                <dt class="col-sm-2">
                    Date of modification
                </dt>
                <dd class="col-sm-10">
                    @Entidade.RecordDate
                    &nbsp;
                </dd>
            </dl>
            <hr />
        </div>

        <div class="row">
            <div class="col-md-12" align="right">
                <button type="submit" value="Fechar" class="btn btn-success" @onclick="Fechar">
                    Close
                </button>
            </div>
        </div>

        @code {

        [Parameter] public Chapter Entidade { get; set; } = new();
        [Parameter] public Radzen.DialogService? Modal { get; set; }

        void Fechar()
        {
            if (Modal != null)
                Modal.Close(true);
        }

        }
    </Authorized>
    <NotAuthorized>
        <frontend.Shared.AcessoNegado />
    </NotAuthorized>
</AuthorizeView>